/*
 * eLabFTW REST API v2 Documentation
 * This document describes all available endpoints and methods for eLabFTW's API version 2. 
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExclusiveEditMode;
import io.swagger.client.model.Upload;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ExperimentTemplate
 */

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-11-15T12:02:45.960786319Z[GMT]")

public class ExperimentTemplate implements ExperimentsTemplatesIdBody1 {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("category")
  private Integer category = null;

  @SerializedName("category_title")
  private String categoryTitle = null;

  @SerializedName("category_color")
  private String categoryColor = null;

  @SerializedName("exclusive_edit_mode")
  private ExclusiveEditMode exclusiveEditMode = null;

  @SerializedName("userid")
  private Integer userid = null;

  @SerializedName("canread")
  private String canread = null;

  @SerializedName("canwrite")
  private String canwrite = null;

  @SerializedName("locked")
  private Integer locked = null;

  @SerializedName("lockedby")
  private Integer lockedby = null;

  @SerializedName("locked_at")
  private String lockedAt = null;

  @SerializedName("fullname")
  private String fullname = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("teams_id")
  private Integer teamsId = null;

  @SerializedName("is_pinned")
  private Integer isPinned = null;

  @SerializedName("sharelink")
  private String sharelink = null;

  @SerializedName("status")
  private Integer status = null;

  @SerializedName("status_title")
  private String statusTitle = null;

  @SerializedName("status_color")
  private String statusColor = null;

  @SerializedName("tags")
  private String tags = null;

  @SerializedName("tags_id")
  private String tagsId = null;

  @SerializedName("uploads")
  private List<Upload> uploads = null;

  public ExperimentTemplate id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ExperimentTemplate title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ExperimentTemplate body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public ExperimentTemplate category(Integer category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public Integer getCategory() {
    return category;
  }

  public void setCategory(Integer category) {
    this.category = category;
  }

  public ExperimentTemplate categoryTitle(String categoryTitle) {
    this.categoryTitle = categoryTitle;
    return this;
  }

   /**
   * Get categoryTitle
   * @return categoryTitle
  **/
  @Schema(description = "")
  public String getCategoryTitle() {
    return categoryTitle;
  }

  public void setCategoryTitle(String categoryTitle) {
    this.categoryTitle = categoryTitle;
  }

  public ExperimentTemplate categoryColor(String categoryColor) {
    this.categoryColor = categoryColor;
    return this;
  }

   /**
   * Get categoryColor
   * @return categoryColor
  **/
  @Schema(description = "")
  public String getCategoryColor() {
    return categoryColor;
  }

  public void setCategoryColor(String categoryColor) {
    this.categoryColor = categoryColor;
  }

  public ExperimentTemplate exclusiveEditMode(ExclusiveEditMode exclusiveEditMode) {
    this.exclusiveEditMode = exclusiveEditMode;
    return this;
  }

   /**
   * Get exclusiveEditMode
   * @return exclusiveEditMode
  **/
  @Schema(description = "")
  public ExclusiveEditMode getExclusiveEditMode() {
    return exclusiveEditMode;
  }

  public void setExclusiveEditMode(ExclusiveEditMode exclusiveEditMode) {
    this.exclusiveEditMode = exclusiveEditMode;
  }

  public ExperimentTemplate userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * Get userid
   * @return userid
  **/
  @Schema(description = "")
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }

  public ExperimentTemplate canread(String canread) {
    this.canread = canread;
    return this;
  }

   /**
   * Get canread
   * @return canread
  **/
  @Schema(description = "")
  public String getCanread() {
    return canread;
  }

  public void setCanread(String canread) {
    this.canread = canread;
  }

  public ExperimentTemplate canwrite(String canwrite) {
    this.canwrite = canwrite;
    return this;
  }

   /**
   * Get canwrite
   * @return canwrite
  **/
  @Schema(description = "")
  public String getCanwrite() {
    return canwrite;
  }

  public void setCanwrite(String canwrite) {
    this.canwrite = canwrite;
  }

  public ExperimentTemplate locked(Integer locked) {
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @Schema(description = "")
  public Integer getLocked() {
    return locked;
  }

  public void setLocked(Integer locked) {
    this.locked = locked;
  }

  public ExperimentTemplate lockedby(Integer lockedby) {
    this.lockedby = lockedby;
    return this;
  }

   /**
   * Get lockedby
   * @return lockedby
  **/
  @Schema(description = "")
  public Integer getLockedby() {
    return lockedby;
  }

  public void setLockedby(Integer lockedby) {
    this.lockedby = lockedby;
  }

  public ExperimentTemplate lockedAt(String lockedAt) {
    this.lockedAt = lockedAt;
    return this;
  }

   /**
   * Get lockedAt
   * @return lockedAt
  **/
  @Schema(description = "")
  public String getLockedAt() {
    return lockedAt;
  }

  public void setLockedAt(String lockedAt) {
    this.lockedAt = lockedAt;
  }

  public ExperimentTemplate fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

   /**
   * Get fullname
   * @return fullname
  **/
  @Schema(description = "")
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }

  public ExperimentTemplate metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @Schema(description = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public ExperimentTemplate teamsId(Integer teamsId) {
    this.teamsId = teamsId;
    return this;
  }

   /**
   * Get teamsId
   * @return teamsId
  **/
  @Schema(description = "")
  public Integer getTeamsId() {
    return teamsId;
  }

  public void setTeamsId(Integer teamsId) {
    this.teamsId = teamsId;
  }

  public ExperimentTemplate isPinned(Integer isPinned) {
    this.isPinned = isPinned;
    return this;
  }

   /**
   * Get isPinned
   * @return isPinned
  **/
  @Schema(description = "")
  public Integer getIsPinned() {
    return isPinned;
  }

  public void setIsPinned(Integer isPinned) {
    this.isPinned = isPinned;
  }

  public ExperimentTemplate sharelink(String sharelink) {
    this.sharelink = sharelink;
    return this;
  }

   /**
   * Get sharelink
   * @return sharelink
  **/
  @Schema(description = "")
  public String getSharelink() {
    return sharelink;
  }

  public void setSharelink(String sharelink) {
    this.sharelink = sharelink;
  }

  public ExperimentTemplate status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public ExperimentTemplate statusTitle(String statusTitle) {
    this.statusTitle = statusTitle;
    return this;
  }

   /**
   * Get statusTitle
   * @return statusTitle
  **/
  @Schema(description = "")
  public String getStatusTitle() {
    return statusTitle;
  }

  public void setStatusTitle(String statusTitle) {
    this.statusTitle = statusTitle;
  }

  public ExperimentTemplate statusColor(String statusColor) {
    this.statusColor = statusColor;
    return this;
  }

   /**
   * Get statusColor
   * @return statusColor
  **/
  @Schema(description = "")
  public String getStatusColor() {
    return statusColor;
  }

  public void setStatusColor(String statusColor) {
    this.statusColor = statusColor;
  }

  public ExperimentTemplate tags(String tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public String getTags() {
    return tags;
  }

  public void setTags(String tags) {
    this.tags = tags;
  }

  public ExperimentTemplate tagsId(String tagsId) {
    this.tagsId = tagsId;
    return this;
  }

   /**
   * Get tagsId
   * @return tagsId
  **/
  @Schema(description = "")
  public String getTagsId() {
    return tagsId;
  }

  public void setTagsId(String tagsId) {
    this.tagsId = tagsId;
  }

  public ExperimentTemplate uploads(List<Upload> uploads) {
    this.uploads = uploads;
    return this;
  }

  public ExperimentTemplate addUploadsItem(Upload uploadsItem) {
    if (this.uploads == null) {
      this.uploads = new ArrayList<Upload>();
    }
    this.uploads.add(uploadsItem);
    return this;
  }

   /**
   * Get uploads
   * @return uploads
  **/
  @Schema(description = "")
  public List<Upload> getUploads() {
    return uploads;
  }

  public void setUploads(List<Upload> uploads) {
    this.uploads = uploads;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExperimentTemplate experimentTemplate = (ExperimentTemplate) o;
    return Objects.equals(this.id, experimentTemplate.id) &&
        Objects.equals(this.title, experimentTemplate.title) &&
        Objects.equals(this.body, experimentTemplate.body) &&
        Objects.equals(this.category, experimentTemplate.category) &&
        Objects.equals(this.categoryTitle, experimentTemplate.categoryTitle) &&
        Objects.equals(this.categoryColor, experimentTemplate.categoryColor) &&
        Objects.equals(this.exclusiveEditMode, experimentTemplate.exclusiveEditMode) &&
        Objects.equals(this.userid, experimentTemplate.userid) &&
        Objects.equals(this.canread, experimentTemplate.canread) &&
        Objects.equals(this.canwrite, experimentTemplate.canwrite) &&
        Objects.equals(this.locked, experimentTemplate.locked) &&
        Objects.equals(this.lockedby, experimentTemplate.lockedby) &&
        Objects.equals(this.lockedAt, experimentTemplate.lockedAt) &&
        Objects.equals(this.fullname, experimentTemplate.fullname) &&
        Objects.equals(this.metadata, experimentTemplate.metadata) &&
        Objects.equals(this.teamsId, experimentTemplate.teamsId) &&
        Objects.equals(this.isPinned, experimentTemplate.isPinned) &&
        Objects.equals(this.sharelink, experimentTemplate.sharelink) &&
        Objects.equals(this.status, experimentTemplate.status) &&
        Objects.equals(this.statusTitle, experimentTemplate.statusTitle) &&
        Objects.equals(this.statusColor, experimentTemplate.statusColor) &&
        Objects.equals(this.tags, experimentTemplate.tags) &&
        Objects.equals(this.tagsId, experimentTemplate.tagsId) &&
        Objects.equals(this.uploads, experimentTemplate.uploads);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, body, category, categoryTitle, categoryColor, exclusiveEditMode, userid, canread, canwrite, locked, lockedby, lockedAt, fullname, metadata, teamsId, isPinned, sharelink, status, statusTitle, statusColor, tags, tagsId, uploads);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExperimentTemplate {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categoryTitle: ").append(toIndentedString(categoryTitle)).append("\n");
    sb.append("    categoryColor: ").append(toIndentedString(categoryColor)).append("\n");
    sb.append("    exclusiveEditMode: ").append(toIndentedString(exclusiveEditMode)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    canread: ").append(toIndentedString(canread)).append("\n");
    sb.append("    canwrite: ").append(toIndentedString(canwrite)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    lockedby: ").append(toIndentedString(lockedby)).append("\n");
    sb.append("    lockedAt: ").append(toIndentedString(lockedAt)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    teamsId: ").append(toIndentedString(teamsId)).append("\n");
    sb.append("    isPinned: ").append(toIndentedString(isPinned)).append("\n");
    sb.append("    sharelink: ").append(toIndentedString(sharelink)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusTitle: ").append(toIndentedString(statusTitle)).append("\n");
    sb.append("    statusColor: ").append(toIndentedString(statusColor)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    tagsId: ").append(toIndentedString(tagsId)).append("\n");
    sb.append("    uploads: ").append(toIndentedString(uploads)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

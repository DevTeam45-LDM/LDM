/*
 * eLabFTW REST API v2 Documentation
 * This document describes all available endpoints and methods for eLabFTW's API version 2. 
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * InlineResponse2001
 */

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-11-15T12:02:45.960786319Z[GMT]")

public class InlineResponse2001 {
  @SerializedName("allowed_extensions")
  private List<String> allowedExtensions = null;

  @SerializedName("max_filesize")
  private Integer maxFilesize = null;

  @SerializedName("max_upload_size")
  private String maxUploadSize = null;

  @SerializedName("max_upload_time")
  private Integer maxUploadTime = null;

  public InlineResponse2001 allowedExtensions(List<String> allowedExtensions) {
    this.allowedExtensions = allowedExtensions;
    return this;
  }

  public InlineResponse2001 addAllowedExtensionsItem(String allowedExtensionsItem) {
    if (this.allowedExtensions == null) {
      this.allowedExtensions = new ArrayList<String>();
    }
    this.allowedExtensions.add(allowedExtensionsItem);
    return this;
  }

   /**
   * allowlist of file extensions accepted for import
   * @return allowedExtensions
  **/
  @Schema(example = "[\".eln\",\".csv\"]", description = "allowlist of file extensions accepted for import")
  public List<String> getAllowedExtensions() {
    return allowedExtensions;
  }

  public void setAllowedExtensions(List<String> allowedExtensions) {
    this.allowedExtensions = allowedExtensions;
  }

  public InlineResponse2001 maxFilesize(Integer maxFilesize) {
    this.maxFilesize = maxFilesize;
    return this;
  }

   /**
   * maximum size of an uploaded file in bytes
   * @return maxFilesize
  **/
  @Schema(example = "2147483648", description = "maximum size of an uploaded file in bytes")
  public Integer getMaxFilesize() {
    return maxFilesize;
  }

  public void setMaxFilesize(Integer maxFilesize) {
    this.maxFilesize = maxFilesize;
  }

  public InlineResponse2001 maxUploadSize(String maxUploadSize) {
    this.maxUploadSize = maxUploadSize;
    return this;
  }

   /**
   * value of MAX_UPLOAD_SIZE env parameter
   * @return maxUploadSize
  **/
  @Schema(example = "3G", description = "value of MAX_UPLOAD_SIZE env parameter")
  public String getMaxUploadSize() {
    return maxUploadSize;
  }

  public void setMaxUploadSize(String maxUploadSize) {
    this.maxUploadSize = maxUploadSize;
  }

  public InlineResponse2001 maxUploadTime(Integer maxUploadTime) {
    this.maxUploadTime = maxUploadTime;
    return this;
  }

   /**
   * value of MAX_UPLOAD_TIME env parameter
   * @return maxUploadTime
  **/
  @Schema(example = "900000", description = "value of MAX_UPLOAD_TIME env parameter")
  public Integer getMaxUploadTime() {
    return maxUploadTime;
  }

  public void setMaxUploadTime(Integer maxUploadTime) {
    this.maxUploadTime = maxUploadTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001 inlineResponse2001 = (InlineResponse2001) o;
    return Objects.equals(this.allowedExtensions, inlineResponse2001.allowedExtensions) &&
        Objects.equals(this.maxFilesize, inlineResponse2001.maxFilesize) &&
        Objects.equals(this.maxUploadSize, inlineResponse2001.maxUploadSize) &&
        Objects.equals(this.maxUploadTime, inlineResponse2001.maxUploadTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowedExtensions, maxFilesize, maxUploadSize, maxUploadTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001 {\n");
    
    sb.append("    allowedExtensions: ").append(toIndentedString(allowedExtensions)).append("\n");
    sb.append("    maxFilesize: ").append(toIndentedString(maxFilesize)).append("\n");
    sb.append("    maxUploadSize: ").append(toIndentedString(maxUploadSize)).append("\n");
    sb.append("    maxUploadTime: ").append(toIndentedString(maxUploadTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

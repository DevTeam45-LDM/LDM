/*
 * eLabFTW REST API v2 Documentation
 * This document describes all available endpoints and methods for eLabFTW's API version 2. 
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;

import javax.annotation.processing.Generated;
import java.io.IOException;
/**
 * Notification
 */

@Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-11-15T12:02:45.960786319Z[GMT]")

public class Notification {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("category")
  private Integer category = null;

  @SerializedName("is_ack")
  private Integer isAck = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("userid")
  private Integer userid = null;

  @SerializedName("send_email")
  private Integer sendEmail = null;

  @SerializedName("email_sent_at")
  private String emailSentAt = null;

  @SerializedName("body")
  private String body = null;

  public Notification id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Notification category(Integer category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public Integer getCategory() {
    return category;
  }

  public void setCategory(Integer category) {
    this.category = category;
  }

  public Notification isAck(Integer isAck) {
    this.isAck = isAck;
    return this;
  }

   /**
   * Get isAck
   * @return isAck
  **/
  @Schema(description = "")
  public Integer getIsAck() {
    return isAck;
  }

  public void setIsAck(Integer isAck) {
    this.isAck = isAck;
  }

  public Notification createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Notification userid(Integer userid) {
    this.userid = userid;
    return this;
  }

   /**
   * Get userid
   * @return userid
  **/
  @Schema(description = "")
  public Integer getUserid() {
    return userid;
  }

  public void setUserid(Integer userid) {
    this.userid = userid;
  }

  public Notification sendEmail(Integer sendEmail) {
    this.sendEmail = sendEmail;
    return this;
  }

   /**
   * Get sendEmail
   * @return sendEmail
  **/
  @Schema(description = "")
  public Integer getSendEmail() {
    return sendEmail;
  }

  public void setSendEmail(Integer sendEmail) {
    this.sendEmail = sendEmail;
  }

  public Notification emailSentAt(String emailSentAt) {
    this.emailSentAt = emailSentAt;
    return this;
  }

   /**
   * Get emailSentAt
   * @return emailSentAt
  **/
  @Schema(description = "")
  public String getEmailSentAt() {
    return emailSentAt;
  }

  public void setEmailSentAt(String emailSentAt) {
    this.emailSentAt = emailSentAt;
  }

  public Notification body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.id, notification.id) &&
        Objects.equals(this.category, notification.category) &&
        Objects.equals(this.isAck, notification.isAck) &&
        Objects.equals(this.createdAt, notification.createdAt) &&
        Objects.equals(this.userid, notification.userid) &&
        Objects.equals(this.sendEmail, notification.sendEmail) &&
        Objects.equals(this.emailSentAt, notification.emailSentAt) &&
        Objects.equals(this.body, notification.body);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, category, isAck, createdAt, userid, sendEmail, emailSentAt, body);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    isAck: ").append(toIndentedString(isAck)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
    sb.append("    sendEmail: ").append(toIndentedString(sendEmail)).append("\n");
    sb.append("    emailSentAt: ").append(toIndentedString(emailSentAt)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
